{
    "id": 756,
    "title": "Pyramid Transition Matrix",
    "title_slug": "pyramid-transition-matrix",
    "backend_id": 757,
    "content": "<div><p>We are stacking blocks to form a pyramid. Each block has a color which is a one letter string.</p>\n\n<p>We are allowed to place any color block <code>C</code> on top of two adjacent blocks of colors <code>A</code> and <code>B</code>, if and only if <code>ABC</code> is an allowed triple.</p>\n\n<p>We start with a bottom row of <code>bottom</code>, represented as a single string. We also start with a list of allowed triples <code>allowed</code>. Each allowed triple is represented as a string of length 3.</p>\n\n<p>Return true if we can build the pyramid all the way to the top, otherwise false.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre><b>Input:</b> bottom = \"BCD\", allowed = [\"BCG\", \"CDE\", \"GEA\", \"FFF\"]\n<b>Output:</b> true\n<b>Explanation:</b>\nWe can stack the pyramid like this:\n    A\n   / \\\n  G   E\n / \\ / \\\nB   C   D\n\nWe are allowed to place G on top of B and C because BCG is an allowed triple.  Similarly, we can place E on top of C and D, then A on top of G and E.</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre><b>Input:</b> bottom = \"AABA\", allowed = [\"AAA\", \"AAB\", \"ABA\", \"ABB\", \"BAC\"]\n<b>Output:</b> false\n<b>Explanation:</b>\nWe can't stack the pyramid to the top.\nNote that there could be allowed triples (A, B, C) and (A, B, D) with C != D.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>bottom</code> will be a string with length in range <code>[2, 8]</code>.</li>\n\t<li><code>allowed</code> will have length in range <code>[0, 200]</code>.</li>\n\t<li>Letters in all strings will be chosen from the set <code>{'A', 'B', 'C', 'D', 'E', 'F', 'G'}</code>.</li>\n</ul>\n</div>"
}