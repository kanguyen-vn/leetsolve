{
    "id": 443,
    "title": "String Compression",
    "title_slug": "string-compression",
    "backend_id": 443,
    "content": "<div><p>Given an array of characters <code>chars</code>, compress it using the following algorithm:</p>\n\n<p>Begin with an empty string <code>s</code>. For each group of <strong>consecutive repeating characters</strong> in <code>chars</code>:</p>\n\n<ul>\n\t<li>If the group's length is 1, append the character to&nbsp;<code>s</code>.</li>\n\t<li>Otherwise, append the character followed by the group's length.</li>\n</ul>\n\n<p>The compressed string&nbsp;<code>s</code> <strong>should not be returned separately</strong>, but instead be stored&nbsp;<strong>in the input character array&nbsp;<code>chars</code></strong>. Note that group lengths that are 10 or longer will be split into multiple characters in&nbsp;<code>chars</code>.</p>\n\n<p>After you are done <b>modifying the input array</b>, return <em>the new length of the array</em>.</p>\n&nbsp;\n\n<p><b>Follow up:</b><br>\nCould you solve it using only <code>O(1)</code> extra space?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n<strong>Output:</strong> Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n<strong>Explanation:</strong>&nbsp;The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> chars = [\"a\"]\n<strong>Output:</strong> Return 1, and the first character of the input array should be: [\"a\"]\n<strong>Explanation:</strong>&nbsp;The only group is \"a\", which remains uncompressed since it's a single character.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n<strong>Output:</strong> Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\n<strong>Explanation:</strong>&nbsp;The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre><strong>Input:</strong> chars = [\"a\",\"a\",\"a\",\"b\",\"b\",\"a\",\"a\"]\n<strong>Output:</strong> Return 6, and the first 6 characters of the input array should be: [\"a\",\"3\",\"b\",\"2\",\"a\",\"2\"].\n<strong>Explanation:</strong>&nbsp;The groups are \"aaa\", \"bb\", and \"aa\". This compresses to \"a3b2a2\". Note that each group is independent even if two groups have the same character.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= chars.length &lt;= 2000</code></li>\n\t<li><code>chars[i]</code> is a lower-case English letter, upper-case English letter, digit, or symbol.</li>\n</ul>\n</div>"
}