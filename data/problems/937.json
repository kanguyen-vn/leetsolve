{
    "id": 937,
    "title": "Reorder Data in Log Files",
    "title_slug": "reorder-data-in-log-files",
    "backend_id": 974,
    "content": "<div><p>You have an array of <code>logs</code>.&nbsp; Each log is a space delimited string of words.</p>\n\n<p>For each log, the first word in each log is an alphanumeric <em>identifier</em>.&nbsp; Then, either:</p>\n\n<ul>\n\t<li>Each word after the identifier will consist only of lowercase letters, or;</li>\n\t<li>Each word after the identifier will consist only of digits.</li>\n</ul>\n\n<p>We will call these two varieties of logs <em>letter-logs</em> and <em>digit-logs</em>.&nbsp; It is guaranteed that each log has at least one word after its identifier.</p>\n\n<p>Reorder the logs so that all of the letter-logs come before any digit-log.&nbsp; The letter-logs are ordered lexicographically ignoring identifier, with the identifier used in case of ties.&nbsp; The digit-logs should be put in their original order.</p>\n\n<p>Return the final order of the logs.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\n<strong>Output:</strong> [\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= logs.length &lt;= 100</code></li>\n\t<li><code>3 &lt;= logs[i].length &lt;= 100</code></li>\n\t<li><code>logs[i]</code> is guaranteed to have an identifier, and a word after the identifier.</li>\n</ol>\n</div>"
}