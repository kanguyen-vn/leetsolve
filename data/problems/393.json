{
    "id": 393,
    "title": "UTF-8 Validation",
    "title_slug": "utf-8-validation",
    "backend_id": 393,
    "content": "<div><p>A character in UTF8 can be from <b>1 to 4 bytes</b> long, subjected to the following rules:</p>\n<ol>\n<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>\n<li>For n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.</li>\n</ol>\n<p>This is how the UTF-8 encoding would work:</p>\n\n<pre><code>   Char. number range  |        UTF-8 octet sequence\n      (hexadecimal)    |              (binary)\n   --------------------+---------------------------------------------\n   0000 0000-0000 007F | 0xxxxxxx\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n</code></pre>\n<p>\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\n</p>\n<p>\n<b>Note:</b><br>\nThe input is an array of integers. Only the <b>least significant 8 bits</b> of each integer is used to store the data. This means each integer represents only 1 byte of data.\n</p>\n\n<p>\n<b>Example 1:</b>\n</p><pre>data = [197, 130, 1], which represents the octet sequence: <b>11000101 10000010 00000001</b>.\n\nReturn <b>true</b>.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n</pre>\n<p></p>\n\n<p>\n<b>Example 2:</b>\n</p><pre>data = [235, 140, 4], which represented the octet sequence: <b>11101011 10001100 00000100</b>.\n\nReturn <b>false</b>.\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that's correct.\nBut the second continuation byte does not start with 10, so it is invalid.\n</pre>\n<p></p></div>"
}