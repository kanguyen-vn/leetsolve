{
    "id": 127,
    "title": "Word Ladder",
    "title_slug": "word-ladder",
    "backend_id": 127,
    "content": "<div><p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary's word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n\n<ol>\n\t<li>Only one letter can be changed at a time.</li>\n\t<li>Each transformed word must exist in the word list.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Return 0 if there is no such transformation sequence.</li>\n\t<li>All words have the same length.</li>\n\t<li>All words contain only lowercase alphabetic characters.</li>\n\t<li>You may assume no duplicates in the word list.</li>\n\t<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong>\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\n<strong>Output: </strong>5\n\n<strong>Explanation:</strong> As one shortest transformation is \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\",\nreturn its length 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong>\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\n<strong>Output:</strong>&nbsp;0\n\n<strong>Explanation:</strong>&nbsp;The endWord \"cog\" is not in wordList, therefore no possible<strong>&nbsp;</strong>transformation.\n</pre>\n\n<ul>\n</ul>\n</div>"
}