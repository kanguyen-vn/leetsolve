{
    "id": 1624,
    "title": "Largest Substring Between Two Equal Characters",
    "title_slug": "largest-substring-between-two-equal-characters",
    "backend_id": 1746,
    "content": "<div><p>Given a string <code>s</code>, return <em>the length of the longest substring between two equal characters, excluding the two characters.</em> If there is no such substring return <code>-1</code>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"aa\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The optimal substring here is an empty substring between the two <code>'a's</code>.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"abca\"\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The optimal substring here is \"bc\".\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"cbzxy\"\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There are no characters that appear twice in s.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre><strong>Input:</strong> s = \"cabbac\"\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The optimal substring here is \"abba\". Other non-optimal substrings include \"bb\" and \"\".\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 300</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n</div>"
}