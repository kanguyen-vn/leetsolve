{
    "id": 662,
    "title": "Maximum Width of Binary Tree",
    "title_slug": "maximum-width-of-binary-tree",
    "backend_id": 662,
    "content": "<div><p>Given a binary tree, write a function to get the maximum width of the given tree. The maximum width of a tree is the maximum width among all levels.</p>\n\n<p>The width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the <code>null</code> nodes between the end-nodes are also counted into the length calculation.</p>\n\n<p>It is <strong>guaranteed</strong> that the answer will in the range of 32-bit signed integer.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre><b>Input:</b> \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\n<b>Output:</b> 4\n<b>Explanation:</b> The maximum width existing in the third level with the length 4 (5,3,null,9).\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre><b>Input:</b> \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the third level with the length 2 (5,3).\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre><b>Input:</b> \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the second level with the length 2 (3,2).\n</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre><b>Input:</b> \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\n<b>Output:</b> 8\n<b>Explanation:</b>The maximum width existing in the fourth level with the length 8 (6,null,null,null,null,null,null,7).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The&nbsp;given binary tree will have between&nbsp;<code>1</code>&nbsp;and&nbsp;<code>3000</code>&nbsp;nodes.</li>\n</ul>\n</div>"
}