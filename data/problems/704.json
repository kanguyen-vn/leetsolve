{
    "id": 704,
    "title": "Binary Search",
    "title_slug": "binary-search",
    "backend_id": 792,
    "content": "<div><p>Given a <strong>sorted</strong> (in ascending order) integer array <code>nums</code> of <code>n</code> elements and a <code>target</code> value, write a function to search <code>target</code> in <code>nums</code>. If <code>target</code> exists, then return its index, otherwise return <code>-1</code>.</p>\n\n<p><br>\n<strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 9\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 9 exists in <code>nums</code> and its index is 4\n\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 2 does not exist in <code>nums</code> so return -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>You may assume that all elements in <code>nums</code> are unique.</li>\n\t<li><code>n</code> will be in the range <code>[1, 10000]</code>.</li>\n\t<li>The value of each element in <code>nums</code> will be in the range <code>[-9999, 9999]</code>.</li>\n</ol>\n</div>"
}