{
    "id": 769,
    "title": "Max Chunks To Make Sorted",
    "title_slug": "max-chunks-to-make-sorted",
    "backend_id": 780,
    "content": "<div><p>Given an array <code>arr</code> that is a permutation of <code>[0, 1, ..., arr.length - 1]</code>, we split the array into some number of \"chunks\" (partitions), and individually sort each chunk.&nbsp; After concatenating them,&nbsp;the result equals the sorted array.</p>\n\n<p>What is the most number of chunks we could have made?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> arr = [4,3,2,1,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> arr = [1,0,2,3,4]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>arr</code> will have length in range <code>[1, 10]</code>.</li>\n\t<li><code>arr[i]</code> will be a permutation of <code>[0, 1, ..., arr.length - 1]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n</div>"
}