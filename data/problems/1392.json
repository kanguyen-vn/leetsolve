{
    "id": 1392,
    "title": "Longest Happy Prefix",
    "title_slug": "longest-happy-prefix",
    "backend_id": 1508,
    "content": "<div><p>A string is called a&nbsp;<em>happy prefix</em>&nbsp;if is a <strong>non-empty</strong> prefix which is also a suffix (excluding itself).</p>\n\n<p>Given a string <code>s</code>. Return the <strong>longest happy prefix</strong>&nbsp;of <code>s</code>&nbsp;.</p>\n\n<p>Return an empty string if no such prefix exists.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> s = \"level\"\n<strong>Output:</strong> \"l\"\n<strong>Explanation:</strong> s contains 4 prefix excluding itself (\"l\", \"le\", \"lev\", \"leve\"), and suffix (\"l\", \"el\", \"vel\", \"evel\"). The largest prefix which is also suffix is given by \"l\".\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> s = \"ababab\"\n<strong>Output:</strong> \"abab\"\n<strong>Explanation:</strong> \"abab\" is the largest prefix which is also suffix. They can overlap in the original string.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> s = \"leetcodeleet\"\n<strong>Output:</strong> \"leet\"\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre><strong>Input:</strong> s = \"a\"\n<strong>Output:</strong> \"\"\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n</div>"
}