{
    "id": 95,
    "title": "Unique Binary Search Trees II",
    "title_slug": "unique-binary-search-trees-ii",
    "backend_id": 95,
    "content": "<div><p>Given an integer <code>n</code>, generate all structurally unique <strong>BST's</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><strong>Input:</strong> 3\n<strong>Output:</strong>\n[\n&nbsp; [1,null,3,2],\n&nbsp; [3,2,null,1],\n&nbsp; [3,1,null,null,2],\n&nbsp; [2,1,3],\n&nbsp; [1,null,2,null,3]\n]\n<strong>Explanation:</strong>\nThe above output corresponds to the 5 unique BST's shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 8</code></li>\n</ul>\n</div>"
}