{
    "id": 623,
    "title": "Add One Row to Tree",
    "title_slug": "add-one-row-to-tree",
    "backend_id": 623,
    "content": "<div><p>Given the root of a binary tree, then value <code>v</code> and depth <code>d</code>, you need to add a row of nodes with value <code>v</code> at the given depth <code>d</code>. The root node is at depth 1. </p>\n\n<p>The adding rule is: given a positive integer depth <code>d</code>, for each NOT null tree nodes <code>N</code> in depth <code>d-1</code>, create two tree nodes with value <code>v</code> as <code>N's</code> left subtree root and right subtree root. And <code>N's</code> <b>original left subtree</b> should be the left subtree of the new left subtree root, its <b>original right subtree</b> should be the right subtree of the new right subtree root. If depth <code>d</code> is 1 that means there is no depth d-1 at all, then create a tree node with value <b>v</b> as the new root of the whole original tree, and the original tree is the new root's left subtree.</p>\n\n<p><b>Example 1:</b><br>\n</p><pre><b>Input:</b> \nA binary tree as following:\n       4\n     /   \\\n    2     6\n   / \\   / \n  3   1 5   \n\n<b>v = 1</b>\n\n<b>d = 2</b>\n\n<b>Output:</b> \n       4\n      / \\\n     1   1\n    /     \\\n   2       6\n  / \\     / \n 3   1   5   \n\n</pre>\n<p></p>\n\n\n<p><b>Example 2:</b><br>\n</p><pre><b>Input:</b> \nA binary tree as following:\n      4\n     /   \n    2    \n   / \\   \n  3   1    \n\n<b>v = 1</b>\n\n<b>d = 3</b>\n\n<b>Output:</b> \n      4\n     /   \n    2\n   / \\    \n  1   1\n /     \\  \n3       1\n</pre>\n<p></p>\n\n<p><b>Note:</b><br>\n</p><ol>\n<li>The given d is in range [1, maximum depth of the given tree + 1].</li>\n<li>The given binary tree has at least one tree node.</li>\n</ol>\n<p></p></div>"
}