{
    "id": 350,
    "title": "Intersection of Two Arrays II",
    "title_slug": "intersection-of-two-arrays-ii",
    "backend_id": 350,
    "content": "<div><p>Given two arrays, write a function to compute their intersection.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong>nums1 = <span id=\"example-input-1-1\">[1,2,2,1]</span>, nums2 = <span id=\"example-input-1-2\">[2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong>nums1 = <span id=\"example-input-2-1\">[4,9,5]</span>, nums2 = <span id=\"example-input-2-2\">[9,4,9,8,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[4,9]</span></pre>\n</div>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>Each element in the result should appear as many times as it shows in both arrays.</li>\n\t<li>The result can be in any order.</li>\n</ul>\n\n<p><b>Follow up:</b></p>\n\n<ul>\n\t<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n\t<li>What if <i>nums1</i>'s size is small compared to <i>nums2</i>'s size? Which algorithm is better?</li>\n\t<li>What if elements of <i>nums2</i> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n</div>"
}