{
    "id": 1487,
    "title": "Making File Names Unique",
    "title_slug": "making-file-names-unique",
    "backend_id": 1611,
    "content": "<div><p>Given an array of strings <code>names</code> of size <code>n</code>. You will create <code>n</code> folders in your file system <strong>such that</strong>, at the <code>ith</code> minute, you will create a folder with the name <code>names[i]</code>.</p>\n\n<p>Since two files <strong>cannot</strong> have the same name, if you enter a folder name which is previously used,&nbsp;the system&nbsp;will have a suffix&nbsp;addition to its name in the form of <code>(k)</code>,&nbsp;where,&nbsp;<code>k</code> is the <strong>smallest positive integer</strong> such that the obtained name remains unique.</p>\n\n<p>Return <em>an array of strings of length <code>n</code></em> where <code>ans[i]</code> is the actual name the system will assign to the <code>ith</code> folder when you create it.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> names = [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\n<strong>Output:</strong> [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\n<strong>Explanation:</strong> Let's see how the file system creates folder names:\n\"pes\" --&gt; not assigned before, remains \"pes\"\n\"fifa\" --&gt; not assigned before, remains \"fifa\"\n\"gta\" --&gt; not assigned before, remains \"gta\"\n\"pes(2019)\" --&gt; not assigned before, remains \"pes(2019)\"\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> names = [\"gta\",\"gta(1)\",\"gta\",\"avalon\"]\n<strong>Output:</strong> [\"gta\",\"gta(1)\",\"gta(2)\",\"avalon\"]\n<strong>Explanation:</strong> Let's see how the file system creates folder names:\n\"gta\" --&gt; not assigned before, remains \"gta\"\n\"gta(1)\" --&gt; not assigned before, remains \"gta(1)\"\n\"gta\" --&gt; the name is reserved, system adds (k), since \"gta(1)\" is also reserved, systems put k = 2. it becomes \"gta(2)\"\n\"avalon\" --&gt; not assigned before, remains \"avalon\"\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre><strong>Input:</strong> names = [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece\"]\n<strong>Output:</strong> [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece(4)\"]\n<strong>Explanation:</strong> When the last folder is created, the smallest positive valid k is 4, and it becomes \"onepiece(4)\".\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre><strong>Input:</strong> names = [\"wano\",\"wano\",\"wano\",\"wano\"]\n<strong>Output:</strong> [\"wano\",\"wano(1)\",\"wano(2)\",\"wano(3)\"]\n<strong>Explanation:</strong> Just increase the value of k each time you create folder \"wano\".\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre><strong>Input:</strong> names = [\"kaido\",\"kaido(1)\",\"kaido\",\"kaido(1)\"]\n<strong>Output:</strong> [\"kaido\",\"kaido(1)\",\"kaido(2)\",\"kaido(1)(1)\"]\n<strong>Explanation:</strong> Please note that system adds the suffix (k) to current name even it contained the same suffix before.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= names.length &lt;= 5 * 10^4</code></li>\n\t<li><code>1 &lt;= names[i].length &lt;= 20</code></li>\n\t<li><code>names[i]</code> consists of lower case English letters, digits and/or round brackets.</li>\n</ul></div>"
}