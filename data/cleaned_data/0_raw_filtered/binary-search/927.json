{
    "id": 927,
    "title": "Three Equal Parts",
    "title_slug": "three-equal-parts",
    "backend_id": 963,
    "content": "<div><p>Given an array <code>A</code> of <code>0</code>s and <code>1</code>s, divide the array into 3 non-empty parts such that all of these parts represent the same binary value.</p>\n\n<p>If it is possible, return <strong>any</strong> <code>[i, j]</code>&nbsp;with <code>i+1 &lt; j</code>, such that:</p>\n\n<ul>\n\t<li><code>A[0], A[1], ..., A[i]</code> is the first part;</li>\n\t<li><code>A[i+1], A[i+2], ..., A[j-1]</code> is the second part, and</li>\n\t<li><code>A[j], A[j+1], ..., A[A.length - 1]</code> is the third part.</li>\n\t<li>All three parts have equal binary value.</li>\n</ul>\n\n<p>If it is not possible, return <code>[-1, -1]</code>.</p>\n\n<p>Note that the entire part is used when considering what binary value it represents.&nbsp; For example, <code>[1,1,0]</code>&nbsp;represents <code>6</code>&nbsp;in decimal,&nbsp;not <code>3</code>.&nbsp; Also, leading zeros are allowed, so&nbsp;<code>[0,1,1]</code> and <code>[1,1]</code> represent the same value.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-1-1\">[1,0,1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong><span id=\"example-input-2-1\">[1,1,0,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[-1,-1]</span></pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A[i] == 0</code>&nbsp;or <code>A[i] == 1</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div></div>"
}