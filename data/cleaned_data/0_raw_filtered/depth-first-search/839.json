{
    "id": 839,
    "title": "Similar String Groups",
    "title_slug": "similar-string-groups",
    "backend_id": 869,
    "content": "<div><p>Two strings <code>X</code>&nbsp;and <code>Y</code>&nbsp;are similar if we can swap two letters (in different positions) of <code>X</code>, so that&nbsp;it equals <code>Y</code>. Also two strings <code>X</code> and <code>Y</code> are similar if they are equal.</p>\n\n<p>For example, <code>\"tars\"</code>&nbsp;and <code>\"rats\"</code>&nbsp;are similar (swapping at positions <code>0</code> and <code>2</code>), and <code>\"rats\"</code> and <code>\"arts\"</code> are similar, but <code>\"star\"</code> is not similar to <code>\"tars\"</code>, <code>\"rats\"</code>, or <code>\"arts\"</code>.</p>\n\n<p>Together, these form two connected groups by similarity: <code>{\"tars\", \"rats\", \"arts\"}</code> and <code>{\"star\"}</code>.&nbsp; Notice that <code>\"tars\"</code> and <code>\"arts\"</code> are in the same group even though they are not similar.&nbsp; Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.</p>\n\n<p>We are given a list <code>strs</code> of strings where every string in <code>strs</code> is an anagram of every other string in <code>strs</code>. How many groups are there?</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> strs = [\"tars\",\"rats\",\"arts\",\"star\"]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> strs = [\"omv\",\"ovm\"]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= strs[i].length &lt;= 1000</code></li>\n\t<li><code>sum(strs[i].length) &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>strs[i]</code> consists of lowercase letters only.</li>\n\t<li>All words in <code>strs</code> have the same length and are anagrams of each other.</li>\n</ul>\n</div>"
}