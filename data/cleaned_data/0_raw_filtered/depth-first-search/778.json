{
    "id": 778,
    "title": "Swim in Rising Water",
    "title_slug": "swim-in-rising-water",
    "backend_id": 794,
    "content": "<div><p>On an N x N <code>grid</code>, each square <code>grid[i][j]</code> represents the elevation at that point <code>(i,j)</code>.</p>\n\n<p>Now rain starts to fall. At time <code>t</code>, the depth of the water everywhere is <code>t</code>. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are&nbsp;at most&nbsp;<code>t</code>. You can swim infinite distance in zero time. Of course, you must stay within the boundaries of the grid during your swim.</p>\n\n<p>You start at the top left square <code>(0, 0)</code>. What is the least time until you can reach the bottom right square <code>(N-1, N-1)</code>?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> [[0,2],[1,3]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nAt time <code>0</code>, you are in grid location <code>(0, 0)</code>.\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\n\nYou cannot reach point <code>(1, 1)</code> until time <code>3</code>.\nWhen the depth of water is <code>3</code>, we can swim anywhere inside the grid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong>\n<strong> 0  1  2  3  4</strong>\n24 23 22 21  <strong>5</strong>\n<strong>12 13 14 15 16</strong>\n<strong>11</strong> 17 18 19 20\n<strong>10  9  8  7  6</strong>\n\nThe final route is marked in bold.\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= N &lt;= 50</code>.</li>\n\t<li>grid[i][j] is a permutation of [0, ..., N*N - 1].</li>\n</ol>\n</div>"
}