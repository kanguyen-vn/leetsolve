{
    "id": 936,
    "title": "Stamping The Sequence",
    "title_slug": "stamping-the-sequence",
    "backend_id": 973,
    "content": "<div><p>You want to form a <code>target</code>&nbsp;string of <strong>lowercase letters</strong>.</p>\n\n<p>At the beginning, your sequence is <code>target.length</code>&nbsp;<code>'?'</code> marks.&nbsp; You also have a <code>stamp</code>&nbsp;of lowercase letters.</p>\n\n<p>On each turn, you may place the stamp over the sequence, and replace every letter in the sequence with the corresponding letter from the stamp.&nbsp; You can make up to <code>10 * target.length</code> turns.</p>\n\n<p>For example, if the initial sequence is <font face=\"monospace\">\"?????\"</font>, and your stamp is <code>\"abc\"</code>,&nbsp; then you may make <font face=\"monospace\">\"abc??\", \"?abc?\", \"??abc\"&nbsp;</font>in the first turn.&nbsp; (Note that the stamp must be fully contained in the boundaries of the sequence in order to stamp.)</p>\n\n<p>If the sequence is possible to stamp, then return an array of&nbsp;the index of the left-most letter being stamped at each turn.&nbsp; If the sequence is not possible to stamp, return an empty array.</p>\n\n<p>For example, if the sequence is <font face=\"monospace\">\"ababc\"</font>, and the stamp is <code>\"abc\"</code>, then we could return the answer <code>[0, 2]</code>, corresponding to the moves <font face=\"monospace\">\"?????\" -&gt; \"abc??\" -&gt; \"ababc\"</font>.</p>\n\n<p>Also, if the sequence is possible to stamp, it is guaranteed it is possible to stamp within <code>10 * target.length</code>&nbsp;moves.&nbsp; Any answers specifying more than this number of moves&nbsp;will not be accepted.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input: </strong>stamp = <span id=\"example-input-1-1\">\"abc\"</span>, target = <span id=\"example-input-1-2\">\"ababc\"</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,2]</span>\n([1,0,2] would also be accepted as an answer, as well as some other answers.)\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input: </strong>stamp = <span id=\"example-input-2-1\">\"</span><span id=\"example-input-2-2\">abca</span><span>\"</span>, target = <span id=\"example-input-2-2\">\"</span><span>aabcaca\"</span>\n<strong>Output: </strong><span id=\"example-output-2\">[3,0,1]</span>\n</pre>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n</div>\n</div>\n\n<ol>\n\t<li><code>1 &lt;= stamp.length &lt;= target.length &lt;= 1000</code></li>\n\t<li><code>stamp</code> and <code>target</code> only contain lowercase letters.</li>\n</ol></div>"
}