{
    "id": 430,
    "title": "Flatten a Multilevel Doubly Linked List",
    "title_slug": "flatten-a-multilevel-doubly-linked-list",
    "backend_id": 766,
    "content": "You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.\nFlatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.\n\u00a0\n\n\n\n\n\n\n\u00a0\nHow\u00a0multilevel linked list is represented in test case:\nWe use the\u00a0multilevel linked list from Example 1 above:\n\nThe serialization of each level is as follows:\n\nTo serialize all levels together we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:\n\nMerging the serialization of each level and removing trailing nulls we obtain:\n\n\u00a0\n\n\nNumber of Nodes will not exceed 1000.\n\n\n"
}